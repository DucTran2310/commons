import { useUndoRedo } from "@/hooks/useUndo";
import { ToastList } from "./ToastList";
import { useToastQueue } from "@/hooks/useToastQueue";

const UndoRedoApp = () => {
  const { value, update, undo, redo, clear, canUndo, canRedo } = useUndoRedo("");
  const { queue, addToast } = useToastQueue();

  return (
    <div className="p-6 max-w-2xl mx-auto space-y-6">
      <h1 className="text-2xl font-bold">üß™ Undo / Redo + Toast Queue</h1>

      {/* Input */}
      <input
        value={value}
        onChange={(e) => {
          update(e.target.value);
          addToast(`‚úÖ ƒê√£ nh·∫≠p: ${e.target.value}`);
        }}
        className="border p-2 w-full rounded"
        placeholder="Nh·∫≠p n·ªôi dung..."
      />

      {/* Buttons */}
      <div className="flex gap-2">
        <button onClick={() => (undo(), addToast("‚è™ Undo"))} disabled={!canUndo} className="btn">
          Undo
        </button>
        <button onClick={() => (redo(), addToast("‚è© Redo"))} disabled={!canRedo} className="btn">
          Redo
        </button>
        <button onClick={() => (clear(), addToast("üßπ ƒê√£ xo√° stack"))} className="btn text-red-500">
          Clear Stack
        </button>
      </div>

      {/* Value hi·ªán t·∫°i */}
      <div className="text-gray-600 text-lg">
        <strong>Gi√° tr·ªã hi·ªán t·∫°i:</strong> {value || "Ch∆∞a nh·∫≠p"}
      </div>

      {/* üëâ Th√¥ng tin h·ªçc t·∫≠p */}
      <div className="bg-gray-100 p-4 rounded-lg shadow space-y-2">
        <h2 className="text-lg font-semibold">üìò Ki·∫øn th·ª©c Undo / Redo</h2>
        <ul className="list-disc list-inside text-sm leading-relaxed text-gray-700">
          <li>
            <strong>Undo</strong>: Quay l·∫°i tr·∫°ng th√°i tr∆∞·ªõc ƒë√≥ (L∆∞u b·∫±ng Stack - LIFO).
          </li>
          <li>
            <strong>Redo</strong>: L·∫∑p l·∫°i h√†nh ƒë·ªông ƒë√£ undo (D√πng Stack ph·ª•).
          </li>
          <li>
            <strong>Stack</strong>: C·∫•u tr√∫c d·ªØ li·ªáu LIFO (Last In First Out) ‚Äì v√≠ d·ª• nh∆∞ Ctrl+Z.
          </li>
          <li>
            <strong>Queue</strong>: FIFO (First In First Out), th∆∞·ªùng d√πng trong h√†ng ƒë·ª£i, v√≠ d·ª• nh∆∞ toast queue.
          </li>
          <li>·ª®ng d·ª•ng: Text Editor, Figma, VSCode, Photoshop, Todo App, Form editing‚Ä¶</li>
          <li>M·ªói thao t√°c c·∫ßn ghi l·∫°i "snapshot" ho·∫∑c "diff" ƒë·ªÉ undo/redo hi·ªáu qu·∫£.</li>
        </ul>
      </div>

      {/* Toast Queue */}
      <ToastList messages={queue} />
    </div>
  );
};

export default UndoRedoApp;
